#
# ProjectCars motion script
#
# component = input, output, mixer, module
#
# device = udp, tcp, serial, shm (shared memory)
# 	- udp
#		- ip = 127.0.0.1
#		- port = 8888
#		- input : bindport = 8888
#	- tcp
#		- ip = 127.0.0.1
#		- port = 8888
#		- input : bindport = 8888
#	- serial
#		- portnum = 1
#		- baudrate = 115200
#	- shm
#		- shmname = name
#		- startindex = 10001
#		- memsize = 1024
#
#
# module
#	- inputvalue = $1
#	- outputvalue = $2
#
#
# mixer
#	- default input value
#		- @roll, @pitch, @yaw, @heave
#	- default output value
#		- @roll_mod, @pitch_mod, @yaw_mod, @heave_mod
#
#
# functions
#	- floor(x)
#	- round(x)
#	- atan(y, x)
#	- clamp(value, min, max)
#	- scale(value, center, rate)
#
#
# global variable
#	- sharedmemory_name = motionmem
#	- log = 0
#
#
# motion variable
#	- @roll, @pitch, @yaw, @heave
#	- @roll_mod, @pitch_mod, @yaw_mod, @heave_mod
#	- @roll_fin, @pitch_fin, @yaw_fin, @heave_fin
#	- @motion_speed
#	- @yaw_speed
#	- @amplitude
#	- @amplitude0
#


sharedmemory_name = motionmem
log = 0


:input
{
	device = udp
	bindport= 10001

	:protocol
	{
		4, int # $1 game state 0=Exit, 1=FrontEnd, 2=InGamePlaying, 3=InGamePause
		4, float # $2 orientation x
		4, float # $3 orientation y
		4, float # $4 orientation z
		4, float # $5 local velocity x
		4, float # $6 local velocity y
		4, float # $7 local velocity z
		4, float # $8 world velocity x
		4, float # $9 world velocity y
		4, float # $10 world velocity z
		4, float # $11 angular velocity x
		4, float # $12 angular velocity y
		4, float # $13 angular velocity z
		4, float # $14 local acceleration x
		4, float # $15 local acceleration y
		4, float # $16 local acceleration z
		4, float # $17 world acceleration x
		4, float # $18 world acceleration y
		4, float # $19 world acceleration z
		4, float # $20 world extents center x
		4, float # $21 world extents center y
		4, float # $22 world extents center z

	}


	:math
	{
		$var4 = $var4 + 1

		@laptime = 0
		@distance = 0
		@gamestate = $1

		@roll = $4
		@pitch = $2
		@yaw = $3
		@heave = $6
	}


	:modulation
	{
		yaw_kp = 0.2
		yaw_ki = 0.0
		yaw_kd = -0.2

		pitch_kp = 0.4
		pitch_ki = 0.0
		pitch_kd = -0.4

		roll_kp = 0.4
		roll_ki = 0.0
		roll_kd = -0.3

		heave_kp = 0.1
		heave_ki = 0
		heave_kd = 0


		yaw_recover_enable = 1
		yaw_max_difference_enable = 1
		yaw_recover_target = 0
		yaw_recover_proportion = 0.02
		yaw_max_difference = 0.5
		yaw_max_difference_proportion = 0.2
		yaw_range = 6.283


		pitch_recover_enable = 1
		pitch_max_difference_enable = 1
		pitch_recover_target = 0
		pitch_recover_proportion = 0.02
		pitch_max_difference = 3.1415
		pitch_max_difference_proportion = 0.2
		pitch_range = 6.283


		roll_recover_enable = 1
		roll_max_difference_enable = 1
		roll_recover_target = 0
		roll_recover_proportion = 0.02
		roll_max_difference = 3.1415
		roll_max_difference_proportion = 0.2
		roll_range = 6.283


		heave_recover_enable = 1
		heave_max_difference_enable = 0
		heave_recover_target = 0
		heave_recover_proportion = 0.1
		heave_max_difference = 100000
		heave_max_difference_proportion = 0.2
		heave_range = 1000000
		heave_range_enable = 1
		heave_range_max = 18.5
		heave_range_min = -18.5
		heave_use_x0_calcvalue = 0


		spline_enable = 0

		yaw_c1 = 0
		yaw_c2 = 40000
		yaw_c3 = 0

		pitch_c1 = 0
		pitch_c2 = 50000
		pitch_c3 = 10000

		roll_c1 = 0
		roll_c2 = 60000
		roll_c3 = 10000

		heave_c1 = 0
		heave_c2 = 30000
		heave_c3 = 10000


	}
}


:module
{
	inputvalue = $16
	outputvalue = $surge

	:modulation
	{
		# surge speed modulation

		kp = 0.2
		ki = 0.0
		kd = 0

		recover_enable = 1
		max_difference_enable = 0
		recover_target = 0
		recover_proportion = 0.4
		max_difference = 100000
		max_difference_proportion = 0.2
		piclamp_enable = 0
		range = 6.283

		c1 = 0
		c2 = -2000
		c3 = 0

		spline_plot_sampling_rate = 10
		spline_interpolation_rate = 10
	}
}


:module
{
	inputvalue = $14
	outputvalue = $sway

	:modulation
	{
		# surge speed modulation

		kp = 0.2
		ki = 0.0
		kd = 0

		recover_enable = 1
		max_difference_enable = 0
		recover_target = 0
		recover_proportion = 0.4
		max_difference = 100000
		max_difference_proportion = 0.2
		piclamp_enable = 0
		range = 6.283

		c1 = 0
		c2 = -2000
		c3 = 0

		spline_plot_sampling_rate = 10
		spline_interpolation_rate = 10
	}
}



:mixer
{
	:init
	{
		@motion_speed = 1
		@yaw_speed = 1
		@checksum = 0
	}


	:math
	{
		@roll_fin = clamp( scale( @roll_mod + $sway, 10000, @motion_speed), 0, 20000 )
		@pitch_fin = clamp( scale( @pitch_mod + $surge, 10000, @motion_speed), 0, 20000 )
		@yaw_fin = clamp( scale( (@yaw_mod * @yaw_speed) + 10000, 10000, @motion_speed), 0, 20000 )
		@heave_fin = clamp( scale( @heave_mod, 10000, @motion_speed), 0, 20000 )
		@fan_fin = clamp( $fan, 0, 100 )
	}
}


:output
{
	device = serial
	portnum = 1
	baudrate = 115200

	:format
	{
		A
		@roll_fin, %5d
		@pitch_fin, %5d
		@yaw_fin, %5d
		"00000"
		"00000"
		@heave_fin, %5d
		"000"
		"000"
		"000"
		"000"
		"000"
		@fan_fin, %3d
		@checksum, %6d
		"0"
		Z
	}

	:format
	{
		A1000010000100001000010000100000000000000000000000600077Z
	}

	:format
	{
		A1000010000100001000010000100000000000000000000000600088Z
	}

	:format
	{
		A1000010000100001000010000100000000000000000000000600011Z
	}

	:format
	{
		A1000010000100001000010000100000000000000000000000600022Z
	}

}



